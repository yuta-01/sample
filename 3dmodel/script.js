import*as THREE from "../lib/three.module.js";import{OrbitControls}from "../lib/OrbitControls.js";import{GLTFLoader}from "../lib/GLTFLoader.js";window.addEventListener("DOMContentLoaded",async()=>{const wrapper=document.querySelector("#webgl");const app=new ThreeApp(wrapper);await app.load();app.init();app.render()},!1);class ThreeApp{static CAMERA_PARAM={fovy:60,aspect:window.innerWidth/window.innerHeight,near:0.1,far:50.0,position:new THREE.Vector3(0.0,2.0,10.0),lookAt:new THREE.Vector3(0.0,0.0,0.0),};static RENDERER_PARAM={clearColor:0xffffff,width:window.innerWidth,height:window.innerHeight,};static DIRECTIONAL_LIGHT_PARAM={color:0xffffff,intensity:1.0,position:new THREE.Vector3(1.0,1.0,1.0),};static AMBIENT_LIGHT_PARAM={color:0xffffff,intensity:0.1};static MATERIAL_PARAM={color:0xffffff};static FOG_PARAM={color:0xffffff,near:15.0,far:25.0};wrapper;renderer;scene;camera;directionalLight;ambientLight;controls;axesHelper;gltf;models=[];constructor(wrapper){this.wrapper=wrapper;this.render=this.render.bind(this);window.addEventListener("resize",()=>{this.renderer.setSize(window.innerWidth,window.innerHeight);this.camera.aspect=window.innerWidth/window.innerHeight;this.camera.updateProjectionMatrix()},!1)} init(){const color=new THREE.Color(ThreeApp.RENDERER_PARAM.clearColor);this.renderer=new THREE.WebGLRenderer();this.renderer.setClearColor(color);this.renderer.setSize(ThreeApp.RENDERER_PARAM.width,ThreeApp.RENDERER_PARAM.height);this.wrapper.appendChild(this.renderer.domElement);this.scene=new THREE.Scene();this.scene.fog=new THREE.Fog(ThreeApp.FOG_PARAM.color,ThreeApp.FOG_PARAM.near,ThreeApp.FOG_PARAM.far);this.camera=new THREE.PerspectiveCamera(ThreeApp.CAMERA_PARAM.fovy,ThreeApp.CAMERA_PARAM.aspect,ThreeApp.CAMERA_PARAM.near,ThreeApp.CAMERA_PARAM.far);this.camera.position.copy(ThreeApp.CAMERA_PARAM.position);this.camera.lookAt(ThreeApp.CAMERA_PARAM.lookAt);this.directionalLight=new THREE.DirectionalLight(ThreeApp.DIRECTIONAL_LIGHT_PARAM.color,ThreeApp.DIRECTIONAL_LIGHT_PARAM.intensity);this.directionalLight.position.copy(ThreeApp.DIRECTIONAL_LIGHT_PARAM.position);this.scene.add(this.directionalLight);this.ambientLight=new THREE.AmbientLight(ThreeApp.AMBIENT_LIGHT_PARAM.color,ThreeApp.AMBIENT_LIGHT_PARAM.intensity);this.scene.add(this.ambientLight);this.models.forEach((gltf)=>{const x=0;const y=0;const z=0;gltf.position.set(x,y,z);gltf.scale.set(0.2,0.2,0.2);this.scene.add(gltf)});const axesBarLength=5.0;this.axesHelper=new THREE.AxesHelper(axesBarLength);this.scene.add(this.axesHelper);this.controls=new OrbitControls(this.camera,this.renderer.domElement)} load(){return new Promise((resolve)=>{const gltfPath="./boeing.glb";const loader=new GLTFLoader();loader.load(gltfPath,(gltf)=>{for(let i=0;i<1;i++){const clonedGltf=gltf.scene.clone();this.models.push(clonedGltf)} resolve()})})} render(){requestAnimationFrame(this.render);this.controls.update();this.renderer.render(this.scene,this.camera)}}